#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # Logging routed through rsyslog, per https://www.percona.com/blog/2014/10/03/haproxy-give-me-some-logs-on-centos-6-5/
    #log         127.0.0.1:514  local0  info
    # Log to stdout
    log stdout format raw local0
    #chroot      /var/lib/haproxy
    #pidfile     /var/run/haproxy.pid
    maxconn     30000
    user        haproxy
    group       haproxy
    #daemon
    ssl-server-verify required
    ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:DHE-RSA-AES256-GCM-SHA384:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK
    ssl-default-bind-options ssl-min-ver TLSv1.2 ssl-max-ver TLSv1.3
    ssl-default-server-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:DHE-RSA-AES256-GCM-SHA384:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK
    ssl-default-server-options ssl-min-ver TLSv1.2 ssl-max-ver TLSv1.3
    tune.ssl.default-dh-param 2048

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           2m
    timeout connect         10s
    timeout client          2m
    timeout server          2m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 30000
#---------------------------------------------------------------------
# BEGIN PS2 frontend
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# http frontend (only exists to redirect http to https)
#---------------------------------------------------------------------
frontend proxy-http
    bind *:80
    redirect scheme https code 301 if !{ ssl_fc }

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend proxy-https
    bind *:443 ssl crt /secrets/certs/proxy/haproxy ca-file /secrets/certs/ca-shared/root-ca.crt

    http-request redirect scheme https unless { ssl_fc }

    http-request set-header X-Client-IP %[src]

    acl has_bitbucket path_sub /bitbucket
    use_backend bitbucket if has_bitbucket

    default_backend bitbucket

backend bitbucket
    # NOTE: "init-addr none" allows proxy to startup even if backend does not immediately DNS resolve
    server bitbucket bitbucket.auth-demo.docker:7990 init-addr none
